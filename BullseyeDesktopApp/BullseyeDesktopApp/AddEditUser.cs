using BullseyeDesktopApp.Models;
using MySqlConnector;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BullseyeDesktopApp
{
    public partial class AddEditUser : Form
    {
        private bool add;
        const string txtMessage = "Automatically Generated";

        public AddEditUser(bool add)
        {
            InitializeComponent();
            this.add = add;
            PopulateLabels();
            PopulateCombos();
            txtFName.KeyPress += NameTextboxHandler; //Subscribes event to event handler verification method
            txtLName.KeyPress += NameTextboxHandler;
        }

        private void AddEditUser_Load(object sender, EventArgs e)
        {
            this.Text = add ? "Bullseye IMS - Add New Employee" : "Bullseye IMS - Edit Employee";

            //Disabled autogenerated fields and disable chkbox if ADD
            txtID.Enabled = !add;
            txtEmail.Enabled = !add;
            txtUsername.Enabled = !add;
            txtPassword.Enabled = !add;
            chkActive.Enabled = !add;

            // Populates message to txts
            if (add)
            {
                txtID.Text = "Auto Generated";
                txtEmail.Text = txtMessage;
                txtUsername.Text = txtMessage;
                txtPassword.Text = txtMessage;
            }
        }


        //           POPULATE LABELS + COMBOBOXES
        //
        // Populates labels with user data from static class
        private void PopulateLabels()
        {
            lblUser.Text = StaticHelpers.UserSession.CurrentUser?.Username ?? ""; //If null empty string
            lblUser.ForeColor = Color.Red;

            lblLocation.Text = StaticHelpers.UserSession.UserLocation ?? "";
            lblLocation.ForeColor = Color.Red;

        }
        // Populates combo boxes with data from db
        private void PopulateCombos()
        {
            try
            {
                using (var context = new BullseyeContext())
                {
                    context.Sites.ToList().ForEach(loc => cmbLocation.Items.Add(loc));
                    context.Posns.ToList().ForEach(pos => cmbPosition.Items.Add(pos));
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "DB Error");
            }
        }


        //        EXIT BUTTON
        //           
        private void btnExit_Click(object sender, EventArgs e)
        {
            this.Close();
        }


        //        SAVE BUTTON
        //
        //
        private void btnSave_Click(object sender, EventArgs e)
        {
            string firstName = txtFName.Text.Trim();
            string lastName = txtLName.Text.Trim();
            Posn position = (Posn)cmbPosition.SelectedItem;
            Site location = (Site)cmbLocation.SelectedItem;
            bool active = chkActive.Checked;

            if (position == null || location == null || firstName == string.Empty || lastName == string.Empty)
            {
                MessageBox.Show("Please select a valid position and location, and ensure first and last name are not empty.",
                    "Input Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            try
            {
                using (var context = new BullseyeContext())
                {
                    if (add)
                    {
                        Employee newUser = new Employee();
                        newUser.FirstName = txtFName.Text;
                        newUser.LastName = txtLName.Text;
                        newUser.PositionId = position.PositionId;
                        newUser.SiteId = location.SiteId;
                        newUser.Active = 1;
                        newUser.Password = StaticHelpers.PasswordHelper.HashPassword("P@ssw0rd-");

                        context.Employees.Add(newUser);
                        context.SaveChanges();
                        ClearInputs();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "DB Error");
            }
        }
        //Clears inputs and shows message saying user added
        private void ClearInputs()
        {
            cmbPosition.SelectedIndex = -1;
            cmbLocation.SelectedIndex = -1;
            foreach (Control ctrl in this.Controls)
            {
                if (ctrl is TextBox txtBox)
                    txtBox.Clear();
            }
            MessageBox.Show("User added to DB", "Success", MessageBoxButtons.OK);
        }


        //       REAL TIME VALIDATION ON FNAME AND LNAME TEXTBOXES
        //
        //Event handler that only allows control keys, letter keys and Hiphons
        private void NameTextboxHandler(object sender, KeyPressEventArgs e)
        {
            if(!char.IsLetter(e.KeyChar) && e.KeyChar != '-' && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }
    }
}
